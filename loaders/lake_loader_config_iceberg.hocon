{
  "license": {
    "accept": ${ACCEPT_LICENSE}
  },

  "input": {
    "streamName": "enriched-good"
    "customEndpoint": "http://localhost.localstack.cloud:4566"
    "dynamodbCustomEndpoint": "http://localhost.localstack.cloud:4566"
    "s3CustomEndpoint": "http://localhost.localstack.cloud:4566"

  }

  "output": {

    "good": {
      "type": "Iceberg",
      "database": "test"
      "table": "events"
      "location": "/tmp/iceberg" # this can also be S3!
      "catalog": {
        "type": "Hadoop"
      }
    }

    "bad": {
      "streamName": "bad"
    }
  }

  "spark": {

    # -- How many times a Spark task should be retried in case of failure.
    "taskRetries": 3

    # -- Any valid spark configuration key/value.
    # -- This can be blank in most setups because the loader already sets sensible defaults.
    # https://github.com/apache/iceberg/commit/fa6403b1888847ce04de50c6b159dd43fdcb4590
    "conf": {
      "fs.s3a.endpoint": "localhost.localstack.cloud:4566"
    }
  }

  # -- Whether the loader should crash and exit if it fails to resolve an Iglu Schema.
  # -- We recommend `true` because Snowplow enriched events have already passed validation, so a missing schema normally
  # -- indicates an error that needs addressing.
  # -- Change to `false` so events go the failed events stream instead of crashing the loader.
  "exitOnMissingIgluSchema": true

  # -- Whether the output parquet files should declare nested fields as non-nullable according to the Iglu schema.
  # -- When true (default), nested fields are nullable only if they are not required fields according to the Iglu schema.
  # -- When false, all nested fields are defined as nullable in the output table's schemas
  # -- Set this to false if you use a query engine that dislikes non-nullable nested fields of a nullable struct.
  "respectIgluNullability": true

  "windowing": "1 minute" # deliberately short period for frequent writes
  "telemetry": {
    "disable": true
  }
}